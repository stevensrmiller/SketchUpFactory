<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHiAAAAEAIACoDwAAFgAAACgAAAAeAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArJNJPLiji4i4n4ZgsJthUGRV/EAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuJ+GhMCnp/zAp6f8wKen/Lyjm/S0n3sgtJtx9KCLHNQoJ
        NwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkILQcvKOTxMCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnq/y8o
        5OstJ96mLSbdWCIdrRgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACok0E8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp5/8uJ+HOLSfehykiyEIcGI4BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC0n3qMwKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8vKOT0Liffsiwm2GomILofAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADgxBBi8o5e0wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp6f9pZuz/6Oj2/9nZ5f+9vdT/jo7L/z461P8wKen/Liff3S4n3pIrJdJCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAKyXVSDAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp6f/JyPb///////39/f/BwcP/s7S2/+7u7v/Ly+n/ZmTq/zAp6f8tJ936BgYfAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALSfenjAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp6f/w8Pz//////8rKzP8AL3f/ADmR/3h6gv/8/Pz/6en7/zkz6f8wKer/DgxQDAAA
        AAAAAAAAAAAAAAAAAAARDlQFLyjj8DAp6f8wKen/xcX2/7y89P+Pju//Qz/q/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/1hV6//+/v///////6eorf9xeJT/ACFV/wAqa//Nzc7//////5+e8P8wKen/JB+yNQAA
        AAAAAAAAAAAAAAAAAAAsJdZDMCnp/zAp6f9lY+z//////////////////f3//+Tk+v/DwvX/g4Lu/zAp
        6f8wKen/MCnp/3x67f//////7+/w/wIcRP8AFjr/AAYV/wAiV/+PkJX//////9bW+P8wKen/KyXWTAAA
        AAAAAAAAAAAAAAAAAAAuJ9+YMCnp/zAp6f+zs/P/////////////////////////////////j47v/zAp
        6f8wKen/MCnp/3Jw2P/7+/v/5+fn/wAcR/8ACyH/AAAA/wAaQv9MUGD///////Ly/f8wKen/LCbZbQAA
        AAAAAAAAAAAAABYTbAMvKOTsMCnp/zAp6f+op/L/3d35//f3/v/////////////////a2vn/MCnp/zAp
        6f8wKen/MCnp/0pJkf/V1dX/3d3d/wAcR/8ABxj/AAAA/wAUNv8cKUj//f39//7+//9DP+r/LSfdiAAA
        AAAAAAAAAAAAACgiyEYwKen/MCnp/zAp6f8wKen/MCnp/zEq6f9yce3/pKTx/8jI9v93de3/MCnp/zAp
        6f8wKen/Lijj/wkILv+srKz/xcbG/wsdP/8ABxb/AAAA/2prcv8xOVH/+/z8//7+/v9gXer/LiffqAAA
        AAAAAAAAAAAAAC0m2nQwKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/ykjzv8gH2D/l5eX/0pNWf8ACRz/AAAA/6+wsf+Ki5D/4uLi/9jY2P9UUeb/LifhxgAA
        AAAAAAAAAAAAAC4n35wwKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp6f8vKOT/IBuq/wcIQ/8ABhb/AAAB/wATMf9NUFn/zMzM/8fHx/86NtD/Lifg5wAA
        AAAAAAAAAAAAAC4o4sYwKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/paXy/5WU
        8P9YVev/Lyjp/zAp6f8wKen/MCnp/y8o5P8lIL//GxeX/xQQef8qKXL/VFOI/yooif8jHrf/Lijk/AEB
        BgAAAAAACAYlAC4n4PIwKen/MCnp/y8o6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f+MjO//////////
        ////////7u78/9PT+P+ysfP/hIPu/zo16f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnq/x0Y
        kSkAAAAAFxNzGzAp6v8wKen/Ozbp/+vs/P/c3Pn/v7/1/5ua8P9mZOz/MSrp/z466v/s7Pz/////////
        ////////////////////////19f4/zMt6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/ysl
        1j0AAAAALCbaQTAp6f8wKen/lpXw////////////////////////////9PX9/+np+//+/v///v////7/
        ///////////////////l5fv/SEXq/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/yok
        z2YAAAAALCbZbjAp6f8wKen/1NT4////////////////////////////////////////////////////
        ///+/////v////Dx/f9fXev/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/y0m
        3H4AAAAALSfdlTAp6f8wKen/YmDs/5KR7/+1tPP/0ND3/+bm+//6+v7/////////////////////////
        ////////+vv+/3597v8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/y0n
        3p8AAAAALijivTAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8yLOn/bWzs/5qZ8P+4uPT/0tL4/+rq
        +//8/P//oqLx/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/y4n
        3rwAAAAALifh6jAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f85NOn/MCnp/zAp6f8wKen/Qz/q/7e39P+jovH/fHvt/z046f8wKen/MCnp/zAp6f8wKen/MCnp/y4o
        4toVEmoRMCno/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/zAp6f9DP+r/3Nz5//////////////////7+///q6vv/09P4/7q69P92de3/MCnp/y4n
        4fgqJNA6MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/MCnp/0RA6v/c3Pn//////////////////////////////////////8fH9v8/O+r/MCno/ywm
        2Y4sJthoMCnp/1JP6v/b2/n/xsb2/7Gw8/+VlPD/cnHt/z876v8wKen/MCnp/zAp6f8wKen/MCnp/zAp
        6f8wKen/Qz/q/93d+f/////////////////////////////////5+f7/n57x/zAp6f8vKObxKyXVUwAA
        AAAsJtmSMCnp/6mo8v////////////////////////////7+///v7/z/4OD6/83M9/+zs/P/np3x/3t5
        7f9WVOv/3d35/////////////////////////////////+rr+/9xb+z/MCnp/y4n4dgpI8onAAAAAAAA
        AAAuJ+C4MCnp/93d+f//////////////////////////////////////////////////////////////
        ////////////////////////////////////////z8/3/0dD6v8wKen/LSfepyQesQoAAAAAAAAAAAAA
        AAAvKOPfMCnp/zMs6f9lZOz/ioju/6en8v+7uvT/0ND3/+Dg+v/w8f3//f3/////////////////////
        //////////////////////////////v7/v+qqvL/MCnp/zAp5/osJtlqAAAAAAAAAAAAAAAAAAAAAAAA
        AAAqJM2QLyjjpy4n39AuJ+HtMCnp/zAp6f8wKen/MCnp/zAp6f8vKOn/ODPp/21s7P+MjO//qajy/7+/
        9f/Qz/f/5eX7//Hx/f//////8PD8/4B/7v8wKen/Lynn4SokzzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGBV6CyUftjAsJdZQLCbYcS4n35AuJ9+yLyjlzC4n4PgwKen/MCnp/zAp
        6f8wKen/MCnp/y8o6f9BPer/REDq/zAp6f8uJ+C+JiC/FgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDU0TKyXWNCki
        yFwvKOVyLCbZni4n4bguKOLaLiji9y0m3IcDAw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD8H//8/AH//PgAP/z4AAP8+AAAfPAAAAzwAAAM8AAABOAAAATgAAAE4AAABMAAAATAAAAEwAAABMAA
        AATAAAAEwAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAAAAAAAAAAAAAAAABAAAAAwAAAAcAAAAfAAA
        APzwAAH8//AH/A==
</value>
  </data>
</root>